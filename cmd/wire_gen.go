// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"go.uber.org/zap"
	"template/internal/app"
	user3 "template/internal/app/api/v1/user"
	"template/internal/app/config"
	"template/internal/app/repo/user"
	"template/internal/app/router"
	user2 "template/internal/app/service/user"
	"template/pkg/gormx"
)

// Injectors from wire.go:

func initApp(cfg *config.Config, logger *zap.Logger) (*app.App, func(), error) {
	db, cleanup, err := gormx.InitGorm(cfg)
	if err != nil {
		return nil, nil, err
	}
	frontUserRepo := &user.FrontUserRepo{
		DB:     db,
		Logger: logger,
	}
	frontUserService := &user2.FrontUserService{
		UserRepo: frontUserRepo,
		Logger:   logger,
	}
	frontUserApi := &user3.FrontUserApi{
		FrontUserService: frontUserService,
	}
	merchantUserRepo := &user.MerchantUserRepo{
		DB:     db,
		Logger: logger,
	}
	merchantUserService := &user2.MerchantUserService{
		UserRepo: merchantUserRepo,
		Logger:   logger,
	}
	merchantUserApi := &user3.MerchantUserApi{
		UserService: merchantUserService,
	}
	userApi := &user3.UserApi{
		FrontUserApi:    frontUserApi,
		MerchantUserApi: merchantUserApi,
	}
	routerRouter := &router.Router{
		UserAPI: userApi,
	}
	appApp := newApp(routerRouter)
	return appApp, func() {
		cleanup()
	}, nil
}
